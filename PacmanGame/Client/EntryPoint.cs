using System;
using System.Collections.Generic;
using PacmanGame.Business.Characters;
using PacmanGame.Business.Game;
using PacmanGame.Business.GhostLogic;
using PacmanGame.Client.UserInterface;
using PacmanGame.Data.Board_Data;
using PacmanGame.Data.Enums;
using PacmanGame.Data.Maps;
using PacmanGame.DataAccess.BoardLayoutConverter;

namespace PacmanGame.Client {
    class EntryPoint {
        static void Main(string[] args) {

            var rawData3 = "111111111111111111111111111111" +
                           "100000000000000001110001110001" +
                           "101011110111111101110100000101" +
                           "100010000000000000000101110001" +
                           "111010110111011101110101110111" +
                           "000010010111011100000101000000" +
                           "111011110111011101110101110111" +
                           "100000000000000000100000000001" +
                           "101101111010111010101101110101" +
                           "100000000010000010001101110001" +
                           "111111111111111111111111111111";

            var rawDataBonus = "1111111111111111111111111" +
                               "1111111111111111111111111" +
                               "1111111111110011111111111" +
                               "1111111111000001111111111" +
                               "1111111100000001111111111" +
                               "1111110000000000111111111" +
                               "1111100000000000111111111" +
                               "1111100000000000111111111" +
                               "1111100000000000011111111" +
                               "1111100000011100011111111" +
                               "1111111100011110001011111" +
                               "1111111111001000000011111" +
                               "1111111111000000000011111" +
                               "1111110011000000000011111" +
                               "1111110001000000000011111" +
                               "1111110001000000001111111" +
                               "1111111001100000001111111" +
                               "1111111000000000001111111" +
                               "1111111100111100001111111" +
                               "1111111110110000001111111" +
                               "1111111110100000001111111" +
                               "1111111111000000001111111" +
                               "1111111000100000001111111" +
                               "1111111010010000001011111" +
                               "1111111000000000001011111" +
                               "1111111000000000001011111" +
                               "1111111000000000001011111" +
                               "1111111000000000001001111" +
                               "1111111000000000001001111" +
                               "1111111100000000000001111" +
                               "1111111100000000000111111" +
                               "1111111100000000000111111" +
                               "1111111100100000000111111" +
                               "1111111101110000000111111" +
                               "1111111111110000001111111" +
                               "1111111111111000001111111" +
                               "1111111111111000001111111";
            
            var rawDataMYOB = "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111100111111111" +
                              "1111111111111111111111111111100111111111" +
                              "1111111111111111111111111111100111111111" +
                              "1111100001000110111100100001100000111111" +
                              "1111000000010010011000001100000010011111" +
                              "1111001100111000011001011110100111001111" +
                              "1111001100111011001011011110100111001111" +
                              "1111001100111011000011011100100111001111" +
                              "1111001100111011100011000000100010011111" +
                              "1111011110111011100111100011101100111111" +
                              "1111111111111111100111111111111111111111" +
                              "1111111111111111001111111111111111111111" +
                              "1111111111111111011111111111111111111111" +
                              "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111111111111111" +
                              "1111111111111111111111111111111111111111";

            
            
            var converter = new BinaryToBoardLayoutConverter();

            var data3 = converter.Convert(11, 30, rawData3);
            
            var board3 = new Board(30, 11, 19, 10, Direction.Right,new List<Ghost>(), data3);

            var dataBonus = converter.Convert(37, 25, rawDataBonus);
            var boardBonus = new Board(25, 37, 13, 3, Direction.Right,new List<Ghost>(),  dataBonus);

            var dataMYOB = converter.Convert(21, 40, rawDataMYOB);
            var boardMYOB = new Board(40, 21, 6, 8, Direction.Right,new List<Ghost>(),  dataMYOB);
            
            
            var display = new ConsoleDisplay();
            display.WriteMenu();
            
            var maps = new PrebuiltBinaryMaps();

            var game = new Game(maps.ArcadeMapBoard, new KeyInput(), display, new GameTimer());

            var levels = new LevelSet {
                maps.ArcadeMapBoard,
                maps.AtariMapBoard,
                board3,
                boardBonus,
                boardMYOB
            };
            
            var sim = new Simulation(3, game, levels, display);
            
            sim.StartGame();

        }
    }
}